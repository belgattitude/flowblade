/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export interface BaseAuthAccount {
  accessToken: string | null;
  accessTokenExpiresAt: Date | null;
  accountId: string;
  createdAt: Date;
  id: string;
  idToken: string | null;
  password: string | null;
  providerId: string;
  refreshToken: string | null;
  refreshTokenExpiresAt: Date | null;
  scope: string | null;
  updatedAt: Date;
  userId: string;
}

export interface BaseAuthApikey {
  createdAt: Date;
  enabled: number | null;
  expiresAt: Date | null;
  id: string;
  key: string;
  lastRefillAt: Date | null;
  lastRequest: Date | null;
  metadata: string | null;
  name: string | null;
  permissions: string | null;
  prefix: string | null;
  rateLimitEnabled: number | null;
  rateLimitMax: number | null;
  rateLimitTimeWindow: number | null;
  refillAmount: number | null;
  refillInterval: number | null;
  remaining: number | null;
  requestCount: number | null;
  start: string | null;
  updatedAt: Date;
  userId: string;
}

export interface BaseAuthJwks {
  createdAt: Date;
  id: string;
  privateKey: string;
  publicKey: string;
}

export interface BaseAuthSession {
  createdAt: Date;
  expiresAt: Date;
  id: string;
  ipAddress: string | null;
  token: string;
  updatedAt: Date;
  userAgent: string | null;
  userId: string;
}

export interface BaseAuthSsoProvider {
  domain: string;
  id: string;
  issuer: string;
  oidcConfig: string | null;
  organizationId: string | null;
  providerId: string;
  samlConfig: string | null;
  userId: string;
}

export interface BaseAuthUser {
  createdAt: Generated<Date>;
  email: string;
  emailVerified: number;
  id: string;
  image: string | null;
  name: string;
  updatedAt: Generated<Date>;
}

export interface BaseAuthVerification {
  createdAt: Generated<Date | null>;
  expiresAt: Date;
  id: string;
  identifier: string;
  updatedAt: Generated<Date | null>;
  value: string;
}

export interface DB {
  "base_auth.account": BaseAuthAccount;
  "base_auth.apikey": BaseAuthApikey;
  "base_auth.jwks": BaseAuthJwks;
  "base_auth.session": BaseAuthSession;
  "base_auth.ssoProvider": BaseAuthSsoProvider;
  "base_auth.user": BaseAuthUser;
  "base_auth.verification": BaseAuthVerification;
}
